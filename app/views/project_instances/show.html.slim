/ .container
/   = render partial: "shared/breadcrumb", locals: {\
/       text_link_hash: {\
/         "Projects" => projects_path,
/         @project.name => project_project_instances_path(@project),
/         @project_instance.name => nil\
/       },
/       class: "mt-4" }

/   - if flash.notice
/     .alert.alert-info = flash.notice
/   h1.mt-4 = @project.name
/   h3
/     = @project_instance.name
/     span class=["ml-2 badge", status_badge_class(@project_instance.deployment_status)] = @project_instance.deployment_status
/     - pull_request_url = GitProviders::Url::PullMergeRequest.new(@project_instance, @project.integration_type).call
/     - if pull_request_url
/       | &nbsp;
/       small
/         = link_to "Pull request", pull_request_url, target: :_blank

/   .mt-4
/     .row.application-links
/       - @project_instance.configurations.each do |configuration|
/         .col-6
/           h5 = configuration.repo_path
/           p.mb-0
/             = "Branch: "
/             span.text-monospace.bg-light = configuration.git_reference
/           p.mb-0
/             = "Link: "
/             = link_to configuration.application_name, configuration.application_url, target: "_blank", rel: "noopener noreferrer"
/           - if @project_instance_policy.show_heroku_link?
/             p.mb-0
/               - if @features_accessor.docker_deploy_performed?(@project_instance)
/                 = link_to "Nomad configuration link", "#{ENV["NOMAD_SERVER"]}/ui/jobs?search=#{@project_instance.name}", target: :_blank
/               - else
/                 = link_to "Heroku configuration link", "https://dashboard.heroku.com/apps/#{configuration.application_name}", target: :_blank

/     .d-flex.justify-content-between.mt-5

/       div.btn-group role="group"
/         - if @project_instance_policy.redeploy?
/           = link_to "Redeploy", project_project_instance_redeploy_path(@project, @project_instance), method: :post, class: "btn btn-outline-primary"
/         = link_to "Reload", project_project_instance_reload_path(@project, @project_instance), method: :post, class: "btn btn-outline-primary #{'disabled' unless @project_instance_policy.reload?}"
/         = link_to "Update code", project_project_instance_update_path(@project, @project_instance), method: :post, class: "btn btn-outline-primary #{'disabled' unless @project_instance_policy.update_server?}"
/         = link_to "Edit ENV keys", edit_project_project_instance_configuration_path(@project, @project_instance), class: "btn btn-outline-secondary #{'disabled' unless @project_instance_policy.edit?}"
/         / = link_to "Dumps", project_project_instance_database_dumps_path(@project, @project_instance), class: "btn btn-outline-secondary #{'disabled' unless @project_instance_policy.dumps?}"
/         = link_to "Addons", project_project_instance_addons_path(@project, @project_instance), class: "btn btn-outline-secondary #{'disabled' unless @project_instance_policy.addons?}"
/         - configuration = @project_instance.configurations.first
/         - if configuration
/           = link_to "Logs", project_project_instance_log_path(@project, @project_instance, application_name: configuration.application_name, process_name: configuration.web_processes.first["name"]), class: "btn btn-outline-secondary #{'disabled' unless @project_instance_policy.logs?}"
/       = link_to "Terminate", project_project_instance_path(@project, @project_instance), method: :delete, class: "btn btn-outline-danger #{'disabled' unless @project_instance_policy.terminate?}"

/     .build-actions.mt-3
/       table.table.table-hover
/         thead
/           tr
/             th Performed action
/             th Author
/             th Created at
/             - if @features_accessor.docker_deploy_performed?(@project_instance)
/               th Commit
/             th Status
/             th
/         tbody
/           - @project_instance.build_actions.order(created_at: :desc).each_with_index do |build_action|
/             tr
/               td
/                 = build_action.action.to_s.humanize
/               td
/                 = build_action.author.full_name
/               td
/                 = build_action.created_at
/               - if @features_accessor.docker_deploy_performed?(@project_instance)
/                 td
/                   code = build_action.git_reference
/               td
/                 span class=["ml-1 badge", action_status_badge_class(build_action.status)]
/                   = build_action.status
/               td
/                 = link_to "View logs", project_project_instance_build_action_path(@project, @project_instance, build_action)
                  

.container.column.pt-5
  .level
    .level-left
      h3.title.is-3.mb-0.mr-5.level-item = @project_instance.name
      span.level-item.tag.mr-5 class=status_badge_class_2(@project_instance.deployment_status) = @project_instance.deployment_status
      - pull_request_url = GitProviders::Url::PullMergeRequest.new(@project_instance, @project.integration_type).call
    .level-right
      - if pull_request_url
        small.has-text-weight-bold
          = link_to pull_request_url, target: :_blank do
            = project_integration_logo(@project, size: "20x20")
            |  Pull request

  .pb-3
    - @project_instance.configurations.each do |configuration|
      p
        span.has-text-weight-bold.mb-0 = configuration.repo_path
        |  
        span.is-family-monospace.ml-2
          i.fa-fw.fas.fa-code-branch
          = configuration.git_reference
        |  
        span.ml-2
          i.fa-fw.fas.fa-link.mr-1
          = link_to "Web URL", configuration.application_url, target: "_blank", rel: "noopener noreferrer"
        |  
        - if false && @project_instance_policy.show_heroku_link?
          span.ml-2
            i.fa-fw.fas.fa-cog.mr-1
            - if @features_accessor.docker_deploy_performed?(@project_instance)
              = link_to "Nomad configuration link", "#{ENV["NOMAD_SERVER"]}/ui/jobs?search=#{@project_instance.name}", target: :_blank, rel: "noopener noreferrer"
            - else
              = link_to "Heroku configuration link", "https://dashboard.heroku.com/apps/#{configuration.application_name}", target: :_blank, rel: "noopener noreferrer"



  .tabs.mt-5
    ul
      li.is-active
        a Builds
      li
        a Configuration
      li
        a Addons
      li
        a Runtime logs

  table.table.is-fullwidth.is-hoverable.table-list-primary
    thead
      tr
        th Performed action
        th Author
        th Status
        th
    tbody
      - @project_instance.build_actions.order(created_at: :desc).each_with_index do |build_action|
        tr
          td = build_action.action.to_s.humanize
          td
            p.has-text-weight-bold.mb-2 = build_action.author.full_name
            p.heading
              = distance_of_time_in_words(Time.zone.now - build_action.created_at)
              |  ago
          td
            span.tag class=action_status_badge_class_2(build_action.status) = build_action.status
          td = link_to "View logs", project_project_instance_build_action_path(@project, @project_instance, build_action)
